import matplotlib.pyplot as pltimport numpy as npfrom scipy.optimize import curve_fitfrom scipy.signal import convolvedef fit(aif, ROI, FS):        """    aif: function of t        The arterial input function, t in [min], output in [kBq/mL]        ROI: ROI object        FS: FrameSchedule object    """        tac = np.array(ROI.avg_intensity)  # list        t = np.array(FS.mid_points) # list        def model(t, K1, k2):        # t must be an array                t_upsampled, step = np.linspace(np.min(t), np.max(t), 2048, retstep=True)        # print(f't_upsampled: {t_upsampled}')        # print(f'step: {step}')                aif_upsampled = aif(t_upsampled)                tac_upsampled = convolve(aif_upsampled, K1*np.exp(-k2 * t_upsampled), mode='full')[:len(t_upsampled)] * step                tac = np.interp(t, t_upsampled, tac_upsampled)                return tac        params, _ = curve_fit(model, t, tac)        ROI.onetcm_params['K1'] = params[0]    ROI.onetcm_params['k2'] = params[1]    ROI.onetcm_params['VD'] = params[0] / params[1]    ts = np.linspace(0, np.max(t)*1.1, 1000)    tacs = model(ts, *params)            return ts, tacs